version: '3.7'
networks:
  localnet:
    driver: macvlan
    enable_ipv6: true
    driver_opts:
      parent: eth0
    ipam:
      config:
        # bogus ipv6 subnet here. The container should use SLAAC to acquire a real ipv6 addr from your router
        - subnet: 2001::0/64
        # 172.25.0.64/27 = 64-95. Don't let your DHCP server assign IP's from this range.
        - subnet: 192.168.86.0/24
          gateway: 192.168.86.1
          ip_range: 192.168.86.64/27

services:
  telegraf:
    container_name: telegraf
    image: telegraf:latest
    network_mode: host
    environment:
      - TZ=America/New_York
      - HOST_PROC=/rootfs/proc
      - HOST_SYS=/rootfs/sys
      - HOST_ETC=/rootfs/etc
      - HOST_MOUNT_PREFIX=/rootfs
    volumes:
      - /var/run/utmp:/var/run/utmp
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/rootfs
      - /sys:/rootfs/sys
      - /etc:/rootfs/etc
      - /proc:/rootfs/proc
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - ./telegraf/scripts:/scripts
      - /run/udev:/run/udev
    user: telegraf:1001
    #user: telegraf:$(stat -c '%g' /var/run/docker.sock)
    restart: always
  nginx_proxy_manager:
    container_name: nginx_proxy_manager
    image: 'jc21/nginx-proxy-manager:latest'
    networks:
        localnet:
          ipv4_address: 192.168.86.15
    environment:
      - TZ=America/New_York
    volumes:
      - ./nginx_proxy_manager/config.json:/app/config/production.json
      - ./nginx_proxy_manager/data:/data
      - ./nginx_proxy_manager/letsencrypt:/etc/letsencrypt
      - ./nginx_proxy_manager/modules:/etc/nginx/modules
    restart: always
  pi-hole:
    container_name: pi-hole
    hostname: pi-hole
    networks:
        localnet:
          ipv4_address: 192.168.86.17
    image: pihole/pihole:latest
    environment:
      - TZ=America/New_York
      - WEB_PORT=380
    volumes:
      - './pi-hole/etc-pihole/:/etc/pihole/'
      - './pi-hole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: always
  oauth2-proxy:
    command: [
      "--config=/etc/oauth2/oauth2_proxy.cfg",
      "--skip-provider-button"
    ]
    image: quay.io/oauth2-proxy/oauth2-proxy:latest-armv6
    networks:
        localnet:
          ipv4_address: 192.168.86.16
    container_name: oauth2-proxy
    environment:
      TZ: 'America/New_York'
    volumes:
      - ./oauth2-proxy:/etc/oauth2/
    restart: always
