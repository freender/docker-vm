networks:
  macvlan_eth0:
    external: true
  pw.internal: 
    name: pw.internal
    external: true
    
services:
  grafana:
    networks:
        pw.internal:
    image: grafana/grafana:latest
    environment:
      TZ: 'America/New_York'
      PUID: 1000
      PGID: 1000
      GF_SERVER_ROOT_URL: ${GRAFANA_URL}
      #GF_INSTALL_PLUGINS: victoriametrics-logs-datasource
    container_name: grafana
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.entryPoints: https
      traefik.http.routers.grafana.middlewares: auth@file,allow-cdn-and-local@file
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    volumes:
      - /mnt/ssdpool/appdata/grafana:/var/lib/grafana
      - /mnt/ssdpool/appdata/grafana/config:/etc/grafana
    restart: always   
  uptime:
    networks:
        pw.internal:
    image: louislam/uptime-kuma:latest
    environment:
      TZ: 'America/New_York'
      PUID: 1000
      PGID: 1000
    container_name: uptime
    labels:
      traefik.enable: true
      traefik.http.routers.uptime.entryPoints: https
      traefik.http.routers.uptime.middlewares: auth@file,allow-cdn-and-local@file
      traefik.http.services.uptime.loadbalancer.server.port: 3001
    volumes:
      - /mnt/ssdpool/appdata/uptime:/app/data
    ports:
      - 3001:3001  # <Host Port>:<Container Port>
    restart: always
      
  watchtower:
    container_name: watchtower
    restart: always
    environment:
      WATCHTOWER_SCHEDULE: 0 0 9 * * ?
      TZ: "America/New_York"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_DEBUG: "false"
    image: ghcr.io/nicholas-fedor/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  geoipupdate:
    container_name: geoipupdate
    image: ghcr.io/maxmind/geoipupdate
    user: 1000:1000
    restart: always
    environment:
      TZ: 'America/New_York' 
      GEOIPUPDATE_ACCOUNT_ID: ${GEOIPUPDATE_ACCOUNT_ID}
      GEOIPUPDATE_LICENSE_KEY: ${GEOIPUPDATE_LICENSE_KEY}
      GEOIPUPDATE_EDITION_IDS: 'GeoLite2-ASN GeoLite2-City GeoLite2-Country'
      GEOIPUPDATE_FREQUENCY: '72'
    networks:
        pw.internal:
    volumes:
      - /mnt/ssdpool/appdata/geoipupdate:/usr/share/GeoIP

  mwbot:
    image: ghcr.io/freender/mwbot:main
    user: 1000:1000
    #build: https://github.com/freender/MWBot.git
    container_name: mwbot
    environment:
      - TZ=America/New_York
      - TOKEN=${TELEGRAM_TOKEN} # Set telegram bot token
      - KUMA_HOST=${UPTIME_HOST} # UptimeKuma IP address and port
      - KUMA_LOGIN=${UPTIME_LOGIN} # UptimeKuma Login
      - KUMA_PASSWORD=${UPTIME_PASSWORD} # UptimeKuma Password
      - KUMA_MW_ID=3 # ID of MW you would like to start
      - CHAT_ID=${TELEGRAM_CHATID} # Set telegram chat id
      - OWNER=${TELEGRAM_OWNER} # Set user id
      - TOKEN_STAGING=${TELEGRAM_TOKEN_STAGING} # Debug - Set telegram bot token
      - WAF_TOKEN=${MW_BOT_WAF_TOKEN} # Debug - WAF token
      - WAF_ZONE=${MW_BOT_WAF_ZONE} # Debug - WAF zone
      - WAF_RULESET=${MW_BOT_WAF_RULESET} # Debug - WAF ruleset
      - WAF_RULEID=${MW_BOT_WAF_RULEID} # Debug - WAF ruleid
      - MW_BOT_ASN_DEFAULT=${MW_BOT_ASN_DEFAULT} # Debug - WAF ruleid
      - CDN_URL=${CDN_URL} # Debug - CDN URL
      - TELEGRAM_AUTH_USERS=${TELEGRAM_AUTH_USERS} # Debug - TELEGRAM_AUTH_USERS
    restart: always
    networks:
        pw.internal:
    # temp volume for debug
    volumes:
      - /mnt/ssdpool/appdata/mwbot/MWBot:/code/staging
      - /mnt/ssdpool/appdata/mwbot/config:/config

  cloudfirewall:
    image: ghcr.io/freender/cloudfirewall:main
    #build: https://github.com/freender/cloudfirewall.git
    container_name: cloudfirewall
    environment:
      - TZ=America/New_York
      - WAF_TOKEN=${CF_BOT_WAF_TOKEN} # Cloudflare WAF token
      - WAF_ZONE=${CF_BOT_WAF_ZONE} # Cloudflare WAF zone
      - WAF_RULESET=${CF_BOT_WAF_RULESET} # Cloudflare WAF ruleset
      - WAF_RULEID=${CF_BOT_WAF_RULEID} # Cloudflare WAF rule id
    restart: always
    networks:
        pw.internal:

  syncthing:
    container_name: syncthing
    image: lscr.io/linuxserver/syncthing    
    hostname: pi-docker
    labels:
      traefik.enable: true
      traefik.http.routers.syncthing.entryPoints: https
      traefik.http.routers.syncthing.middlewares: auth@file,allow-cdn-and-local@file
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/ssdpool/appdata/syncthing:/config
      - /mnt/ssdpool/backup:/backup
      - /mnt/ssdpool/unraid:/unraid
    restart: always
    networks:
        pw.internal:

  adguard-sync:
    image: lscr.io/linuxserver/adguardhome-sync:latest
    container_name: adguard-sync
    labels:
      traefik.enable: true
      traefik.http.routers.adguard-sync.entryPoints: https
      traefik.http.routers.adguard-sync.middlewares: auth@file,allow-cdn-and-local@file
      traefik.http.services.adguard-sync.loadbalancer.server.port: 8080
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - CONFIGFILE=/config/adguardhome-sync.yaml #optional
    volumes:
      - /mnt/ssdpool/appdata/adguard-sync/config:/config
    restart: always
    networks:
        pw.internal:

  apcupsd:
    image: ghcr.io/freender/apcupsd:main
    #build: https://github.com/freender/apcupsd.git
    #pull_policy: build
    hostname: Network
    container_name: apcupsd
    networks:
        pw.internal:    
    devices:
      - /dev/usb/hiddev0
    ports:
      - 13551:3551
    environment: # Delete or comment out any environment variables you don't wish to change
      TZ: "America/New_York" # Default value is Europe/London
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN} # Telegram BOT token
      TELEGRAM_CHATID: ${TELEGRAM_CHATID} # Telegram CHATID
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    restart: always

  adguard:
    image: adguard/adguardhome
    container_name: adguard
    user: 1000:1000
    labels:
      traefik.enable: true
      traefik.http.routers.adguard.entryPoints: https
      traefik.http.routers.adguard.middlewares: auth@file,allow-cdn-and-local@file
      traefik.http.services.adguard.loadbalancer.server.port: 80    
    environment:      
      TZ: 'America/New_York' 
    volumes:
      - /mnt/ssdpool/appdata/adguard/config:/opt/adguardhome/conf # app configuration
      - /mnt/ssdpool/appdata/adguard/work:/opt/adguardhome/work # app working directory                
    restart: always    
    networks:
        pw.internal:     
        macvlan_eth0:
          ipv4_address: 10.0.40.41
          mac_address: "02:42:0a:00:28:29"
